install.packages("KernSmooth")
library(KernSmooth)
setwd("~/")
setwd("D:/Education/Data Science/Working Directory")
dir()
make.NagLogLik <- function(data, fixed=c(FALSE,FALSE)){
params <- fixed
function(p){
params[!fixed]<-p
mu <- params[1]
sigma <- params[2]
a<- -0.5*length(data)*log(2*pi*sigma^2)
b<- -0.5*sum((data-mu)^2)/(sigma^2)
-(a+b)
}
}
?NagLogLik
??NagLogLik
set.seed(1);
normals <-rnorm(100,1,2)
class(normals)
length(normals)
normals
means(normals)
mean(normals)
std(normals)
normals <-rnorm(100,1,2)
mean(normals)
normals <-rnorm(100,1,2)
mean(normals)
nLL<-make.NagLogLik(normals)
nLL
environment(nLL)
ls(environment(nLL))
?ls
ls(envirnoment(make.NagLogLik()))
optim(c(mu=0,sigma=1),nLL)
optim(c(mu=0,sigma=1),nLL)$par
nLL<-make.NegLogLik(normals,c(1,FALSE))
nLL<-make.NegLogLik(normals
)
?source
source(Scoping_Rules_3.R)
source("Scoping_Rules_3.R")
nLL<-make.NegLogLik(normals,c(1,FALSE))
?make.NegLogLik
nLL<-make.NagLogLik(normals)
nLL
nLL<-make.NagLogLik(normals,c(1,FALSE))
x<-seq(1.7,1.9.len=100)
x<-seq(1.7,1.9,len=100)
y<-sapply(x,nLL)
plot(x,exp(-(y-min(y))),type="1")
plot(x,exp(-(y-min(y))),type=1)
plot(x,exp(-(y-min(y))),type="1")
?plot
plot(x,exp(-(y-min(y))),type="l")
class(nLL)
optim(c(mu=0,sigma=1),nLL)$par
nLL
x<-as.date("1970-01-01")
x<-as.Date("1970-01-01")
unclass(x)
x + 5
unclass(x+5)
cube<-function(x,n){
x^3
}
cube(3)
x<-1:10
if(x>5){x<-0}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
load("D:/Education/Data Science/02 - R Programming/Programming_Assignments/ProgrammingAssignment1/ProgrammingAssignment1.RData")
ls()
setwd("D:/Education/Data Science/05 - Reproducible Research/Assignment 1/RepData_PeerAssessment1")
```
---
title: "Reproducible Research - Assignment 1"
author: "Chuong Hoang"
date: "Sunday, February 15, 2015"
output: html_document
keep_md: true
---
###Loading and preprocessing the data
```{r}
activity <- read.csv("activity.csv")
```
###Problem 1 - What is mean total number of steps taken per day?
**1. Calculate the total number of steps taken per day**
```{r}
tt_step <- aggregate(activity$steps, by = list(activity$date),FUN = "sum",na.rm=TRUE)
names(tt_step) <- c("date","steps")
```
**2. Make a histogram of the total number of steps taken each day**
```{r}
library(ggplot2)
ggplot(tt_step, aes(date, steps)) +
geom_bar(stat = "identity", ) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=8)) +
ggtitle(expression(atop("Total Number of Steps Taken per Day", atop(italic("Oct-01-2012 to Nov-30-2012")))))
```
**3. Calculate and report the mean and median of the total number of steps taken per day**
*Calculate*
```{r}
tt_step_mean <- mean(tt_step$steps)
tt_step_median <- median(tt_step$steps)
```
*Report*
- Mean of the total number of steps taken per day is ***`r tt_step_mean`***
- Median of the total number of steps taken per day is ***`r tt_step_median`***
###Problem 2 - What is the average daily activity pattern?
**1. Make a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis) **
```{r}
avg_acrs_all_day <- aggregate(activity$step, by = list(activity$interval),FUN = "mean",na.rm=TRUE)
names(avg_acrs_all_day) <- c("interval", "steps")
ggplot(avg_acrs_all_day, aes(interval, steps)) +
geom_line() +
ggtitle(expression(atop("Average Daily Activity Pattern", atop(italic("Oct-01-2012 to Nov-30-2012")))))
```
**2. Find 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps**
```{r}
highest_interval <- avg_acrs_all_day[avg_acrs_all_day$steps == max(avg_acrs_all_day$steps),"interval"]
```
*Report:* The 5-minute interval contains the maximum number of steps is ***`r highest_interval`***
